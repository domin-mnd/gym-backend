components:
  schemas:
    ValidationError:
      type: array
      items:
        type: object
        description: Validation error of given input.
        properties:
          code:
            type: string
            description: Error type
            example: "invalid_type"
          expected:
            type: string
            description: What was expected
            example: "string"
          received:
            type: string
            description: What's the error
            example: "undefined"
          path:
            type: array
            description: What caused an error
            items:
              type: string
              example: "client_id"
          message:
            type: string
            description: Error description
            example: "Required"
    BankCard:
      type: object
      required: true
      properties:
        bank_card_id:
          type: integer
          description: Id of the card in database
        card_number:
          type: string
          description: Bank card number
        cardholder_name:
          type: string
          description: Owner of the card
        client_id:
          type: integer
          description: Id of the client in database
        cvv:
          type: string
          description: CVC/CVV
        expires_at:
          type: string
          format: date
          description: Card's expiration date
      example:
        bank_card_id: 1
        card_number: "1234567890123456"
        cardholder_name: "SAKHABUTDINOV KAMIL"
        client_id: 1
        cvv: "123"
        expires_at: "2022-01-01"
    Client:
      type: object
      required: true
      properties:
        client_id:
          type: integer
          description: Id of the client in database
        created_at:
          type: string
          format: date
          description: Account creation date
        email_address:
          type: string
          description: Client's email address
        first_name:
          type: string
          description: Client's first name
        last_name:
          type: string
          description: Client's last name
        patronymic:
          type: string
          description: Client's patronymic/middle name
        phone_number:
          type: string
          description: Client's phone number
        profile_picture_url:
          type: string
          description: Link to client's profile picture, typically uploaded using POST /profile-picture
      example:
        client_id: 1
        created_at: "2024-10-10T18:36:47.668Z"
        email_address: "Og0rB@example.com"
        first_name: "Иван"
        last_name: "Иванов"
        patronymic: "Иванович"
        phone_number: "79174236278"
        profile_picture_url: "https://example.com/profile_picture.jpg"
    Session:
      type: object
      required: true
      properties:
        created_at:
          type: string
          format: date
          description: Session creation date
        expires_at:
          type: string
          format: date
          description: Session expiry date
        jwt:
          type: string
          description: Generated JWT
        revoked:
          type: boolean
          description: Whether this session is revoked
        session_id:
          type: integer
          description: Id of the session in database
      example:
        session_id: 1
        created_at: "2024-10-10T18:36:47.668Z"
        expires_at: "2024-11-10T18:36:47.668Z"
        jwt: "jE92mGiq2S.e2s1.da239-Z983ns"
        revoked: false
    Employee:
      allOf:
        - $ref: "#/components/schemas/Client"
        - type: object
          required: true
          properties:
            employee_id:
              type: integer
              description: Id of the employee in database
            client_id:
              type: integer
              description: Id of the client in database
            employee_type:
              type: string
              enum: [ADMIN, INSTRUCTOR, TRAINER]
              description: Employee's current job posting
            left_at:
              type: string
              format: date
              description: Employee's firing date (null if employee wasn't fired yet)
          example:
            employee_id: 1
            client_id: 1
            employee_type: "ADMIN"
            left_at: null
    VisitHistory:
      properties:
        visit_history_id:
          type: integer
          description: Id of the visit in database
        gym_id:
          type: integer
          description: Id of the gym in database
        entered_at:
          type: string
          format: date
          description: Timestamp of entering the gym
        left_at:
          type: string
          format: date
          description: Timestamp of leaving the gym (null if still inside)
      example:
        visit_history_id: 1
        gym_id: 1
        entered_at: "2024-10-10T18:36:47.668Z"
        left_at: "2024-10-10T20:36:47.668Z"
    VisitGraph:
      type: object
      additionalProperties:
        type: number
      example:
        "2024-10-01": 8280000
        "2024-10-02": 0
        "2024-10-03": 3600000
    Gym:
      type: object
      required: true
      properties:
        gym_id:
          type: integer
          description: Id of the gym in database
        city:
          type: string
          description: City where gym is located
        street:
          type: string
          description: Street where gym is located
        building:
          type: string
          description: Building number
        description:
          type: string
          description: Gym's description
      example:
        gym_id: 1
        city: "Казань"
        street: "Хади Такташа"
        building: "24"
        description: "Фитнес-клуб премиум-класса, расположенный в самом сердце Казани."
    PaymentHistory:
      anyOf:
        - type: object
          required: true
          properties:
            payment_history_id:
              type: integer
              description: Id of the payment in database
            type:
              type: string
              enum: [membership, trainer_appointment]
              description: Type of the payment
            client_id:
              type: integer
              description: Id of the client in database
            level_type:
              type: string
              enum: [SIMPLE, INFINITY, PREMIUM]
              description: Membership level
            created_at:
              type: string
              format: date
              description: Payment creation date
          example:
            payment_history_id: 1
            type: "membership"
            client_id: 1
            level_type: "SIMPLE"
            created_at: "2024-10-10T18:36:47.668Z"
        - type: object
          required: true
          properties:
            payment_history_id:
              type: integer
              description: Id of the payment in database
            type:
              type: string
              enum: [membership, trainer_appointment]
              description: Type of the payment
            client_id:
              type: integer
              description: Id of the client in database
            employee_id:
              type: integer
              description: Id of the employee in database
            gym_id:
              type: integer
              description: Id of the gym in database
            appointed_at:
              type: string
              format: date
              description: Appointment start date
            ends_at:
              type: string
              format: date
              description: Appointment end date
          example:
            payment_history_id: 1
            type: "trainer_appointment"
            client_id: 1
            employee_id: 2
            gym_id: 1
            appointed_at: "2024-10-10T18:36:47.668Z"
            ends_at: "2024-10-10T20:36:47.668Z"
    TrainerAppointment:
      allOf:
        - $ref: "#/components/schemas/Client"
        - $ref: "#/components/schemas/Employee"
        - type: object
          required: true
          properties:
            trainer_appointment_id:
              type: integer
              description: Id of the appointment in database
            client_id:
              type: integer
              description: Id of the client in database
            employee_id:
              type: integer
              description: Id of the employee in database
            gym_id:
              type: integer
              description: Id of the gym in database
            appointed_at:
              type: string
              format: date
              description: Appointment start date
            ends_at:
              type: string
              format: date
              description: Appointment end date
          example:
            trainer_appointment_id: 1
            client_id: 1
            employee_id: 2
            gym_id: 1
            appointed_at: "2024-10-10T18:36:47.668Z"
            ends_at: "2024-10-10T20:36:47.668Z"
